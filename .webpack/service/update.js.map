{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./libs/dynamodb-lib.js","webpack:///./libs/response-lib.js","webpack:///./update.js","webpack:///external \"@babel/runtime/helpers/asyncToGenerator\"","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"aws-sdk\"","webpack:///external \"source-map-support/register\""],"names":["call","action","params","dynamoDb","AWS","DynamoDB","DocumentClient","promise","success","body","buildResponse","failure","statusCode","headers","JSON","stringify","main","event","context","console","log","requestContext","process","env","userTableName","data","parse","TableName","Key","userId","identity","cognitoIdentityId","country","Item","noteId","email","language","category","content","attachment","updatedAt","Date","UpdateExpression","ExpressionAttributeValues","ReturnValues","dynamoDbLib","result","status"],"mappings":"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","file":"update.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./update.js\");\n","import AWS from \"aws-sdk\";\n\nexport function call(action, params) {\n  const dynamoDb = new AWS.DynamoDB.DocumentClient();\n\n  return dynamoDb[action](params).promise();\n}\n","export function success(body) {\n    return buildResponse(200, body);\n  }\n  \n  export function failure(body) {\n    return buildResponse(500, body);\n  }\n  \n  function buildResponse(statusCode, body) {\n    return {\n      statusCode: statusCode,\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Credentials\": true\n      },\n      body: JSON.stringify(body)\n    };\n  }\n  ","import * as dynamoDbLib from \"./libs/dynamodb-lib\";\nimport { success, failure } from \"./libs/response-lib\";\n\nexport async function main(event, context) {\n\n  console.log('event:::', event);\n  console.log('event.requestContext:::', event.requestContext);\n  console.log('event.body:::', event.body);\n  console.log('context:::', context);\n  console.log('process.env.TableName', process.env.userTableName);\n\n\n  const data = JSON.parse(event.body);\n  const params = {\n    // TableName: process.env.userTableName,\n    TableName: \"dev-gNewsUser\",\n    // 'Key' defines the partition key and sort key of the item to be updated\n    // - 'userId': Identity Pool identity id of the authenticated user\n    // - 'noteId': path parameter\n    Key: {\n      userId: event.requestContext.identity.cognitoIdentityId,\n      country: data.country\n    },\n    Item: {\n      userId: event.requestContext.identity.cognitoIdentityId,\n      noteId: data.noteId,\n      email: data.email,\n      language: data.language,\n      country: data.country,\n      category: data.category,\n      content: data.content,\n      attachment: data.attachment,\n      updatedAt: Date()\n    },\n    // 'UpdateExpression' defines the attributes to be updated\n    // 'ExpressionAttributeValues' defines the value in the update expression\n    UpdateExpression: \"SET content = :content, attachment = :attachment\",\n    ExpressionAttributeValues: {\n      \":attachment\": data.attachment || null,\n      \":content\": data.content || null\n    },\n    // 'ReturnValues' specifies if and how to return the item's attributes,\n    // where ALL_NEW returns all attributes of the item after the update; you\n    // can inspect 'result' below to see how it works with different settings\n    ReturnValues: \"ALL_NEW\"\n  };\n\n  \n\n  try {\n    const result = await dynamoDbLib.call(\"update\", params);\n    console.log('result:::', result);\n    console.log('params.Item:::', params.Item);\n    return success(params.Item);\n  } catch (e) {\n    return failure({ status: false });\n  }\n}\n","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"aws-sdk\");","module.exports = require(\"source-map-support/register\");"],"sourceRoot":""}
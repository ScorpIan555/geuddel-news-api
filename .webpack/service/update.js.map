{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./libs/dynamodb-lib.js","webpack:///./libs/response-lib.js","webpack:///./update.js","webpack:///external \"@babel/runtime/helpers/asyncToGenerator\"","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"aws-sdk\"","webpack:///external \"source-map-support/register\""],"names":["call","action","params","dynamoDb","AWS","DynamoDB","DocumentClient","promise","success","body","buildResponse","failure","statusCode","headers","JSON","stringify","main","event","context","console","log","requestContext","pathParameters","process","env","userTableName","data","parse","timestamp","Date","email","error","TableName","Key","userId","Item","language","country","category","content","attachment","updatedAt","UpdateExpression","ExpressionAttributeNames","ExpressionAttributeValues","ReturnValues","dynamoDbLib","result","status"],"mappings":"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","file":"update.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./update.js\");\n","import AWS from \"aws-sdk\";\n\nexport function call(action, params) {\n  const dynamoDb = new AWS.DynamoDB.DocumentClient();\n\n  return dynamoDb[action](params).promise();\n}\n","export function success(body) {\n  return buildResponse(200, body);\n}\nexport function failure(body) {\n  return buildResponse(500, body);\n}\nfunction buildResponse(statusCode, body) {\n  return {\n    statusCode: statusCode,\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Credentials\": true\n    },\n    body: JSON.stringify(body)\n  };\n}\n","import * as dynamoDbLib from \"./libs/dynamodb-lib\";\nimport { success, failure } from \"./libs/response-lib\";\n\nexport async function main(event, context) {\n  console.log(\"update.put.event:::\", event);\n  console.log(\"update.put.event.requestContext:::\", event.requestContext);\n  console.log(\"update.put.event.pathParameters:::\", event.pathParameters);\n  console.log(\"update.put.event.body:::\", event.body);\n  console.log(\"update.put.context:::\", context);\n  console.log(\"update.put.process.env.TableName\", process.env.userTableName);\n\n  const data = JSON.parse(event.body);\n  const timestamp = new Date();\n  console.log(\"timestamp:\", timestamp);\n\n  if (typeof data.email !== \"string\") {\n    console.error(\"Validation Failed\");\n    return {\n      statusCode: 400,\n      headers: {\n        \"Content-Type\": \"text/plain\"\n      },\n      body: \"Couldn't update user item, failed validation.\"\n    };\n  }\n\n  const params = {\n    TableName: process.env.userTableName,\n    // TableName: \"dev-gNewsUser\",\n    // 'Key' defines the partition key and sort key of the item to be updated\n    // - 'userId': Identity Pool identity id of the authenticated user\n    Key: {\n      // userId: event.requestContext.identity.cognitoIdentityId,\n      userId: data.email\n    },\n    Item: {\n      // userId: event.requestContext.identity.cognitoIdentityId,\n      userId: data.email,\n      email: data.email,\n      language: data.language,\n      country: data.country,\n      category: data.category,\n      content: data.content,\n      attachment: data.attachment,\n      updatedAt: Date()\n    },\n    // 'UpdateExpression' defines the attributes to be updated\n    UpdateExpression:\n      \"SET #email = :email, #updatedAt = :updatedAt, #category = :category, #country = :country,  #language = :language, content = :content, attachment = :attachment\",\n    ExpressionAttributeNames: {\n      \"#language\": \"language\",\n      \"#country\": \"country\",\n      \"#category\": \"category\",\n      \"#updatedAt\": \"updatedAt\",\n      \"#email\": \"email\"\n    },\n    // 'ExpressionAttributeValues' defines the value in the update expression\n    ExpressionAttributeValues: {\n      \":attachment\": data.attachment || null,\n      \":content\": data.content || null,\n      \":language\": data.language || null,\n      \":country\": data.country || null,\n      \":category\": data.category || null,\n      \":updatedAt\": timestamp,\n      \":email\": data.email || null\n    },\n    // 'ReturnValues' specifies if and how to return the item's attributes,\n    // where ALL_NEW returns all attributes of the item after the update; you\n    // can inspect 'result' below to see how it works with different settings\n    ReturnValues: \"ALL_NEW\"\n  };\n\n  try {\n    const result = await dynamoDbLib.call(\"update\", params);\n    console.log(\"update.put.result:::\", result);\n    console.log(\"update.put.params.Item:::\", params.Item);\n    return success(params.Item);\n  } catch (e) {\n    return failure({ status: false });\n  }\n}\n","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"aws-sdk\");","module.exports = require(\"source-map-support/register\");"],"sourceRoot":""}